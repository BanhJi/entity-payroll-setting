{
  "service": {
    "service": "entity-payroll-setting",
    "serviceObject": {
      "name": "entity-payroll-setting"
    },
    "provider": {
      "stage": "dev",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._@'\",\\-\\/\\(\\)*?]+?)}",
      "name": "aws",
      "runtime": "nodejs12.x",
      "releasedVersion": "v1",
      "stackName": "entity-payroll-setting-dev",
      "region": "ap-southeast-1",
      "environment": {
        "item_table": "Entity"
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Resource": "*",
          "Action": [
            "dynamodb:Query",
            "dynamodb:Scan",
            "dynamodb:GetItem",
            "dynamodb:PutItem",
            "dynamodb:UpdateItem",
            "dynamodb:DeleteItem",
            "dynamodb:BatchWriteItem"
          ]
        },
        {
          "Effect": "Allow",
          "Resource": "*",
          "Action": [
            "sns:*"
          ]
        }
      ],
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "PayrollDashbankDashcreateLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/entity-payroll-setting-dev-payroll-bank-create"
            }
          },
          "PayrollDashbankDashgetLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/entity-payroll-setting-dev-payroll-bank-get"
            }
          },
          "PayrollDashtaxDashcreateLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/entity-payroll-setting-dev-payroll-tax-create"
            }
          },
          "PayrollDashtaxDashgetLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/entity-payroll-setting-dev-payroll-tax-get"
            }
          },
          "PayrollDashbranchDashcreateLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/entity-payroll-setting-dev-payroll-branch-create"
            }
          },
          "PayrollDashbranchDashgetLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/entity-payroll-setting-dev-payroll-branch-get"
            }
          },
          "PayrollDashpositionDashcreateLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/entity-payroll-setting-dev-payroll-position-create"
            }
          },
          "PayrollDashpositionDashgetLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/entity-payroll-setting-dev-payroll-position-get"
            }
          },
          "PayrollDashconponentDashcreateLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/entity-payroll-setting-dev-payroll-conponent-create"
            }
          },
          "PayrollDashconponentDashgetLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/entity-payroll-setting-dev-payroll-conponent-get"
            }
          },
          "PayrollDashperiodDashcreateLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/entity-payroll-setting-dev-payroll-period-create"
            }
          },
          "PayrollDashperiodDashgetLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/entity-payroll-setting-dev-payroll-period-get"
            }
          },
          "PayrollDashnssfDashcreateLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/entity-payroll-setting-dev-payroll-nssf-create"
            }
          },
          "PayrollDashnssfDashgetLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/entity-payroll-setting-dev-payroll-nssf-get"
            }
          },
          "TypeDashofDashworkDashcreateLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/entity-payroll-setting-dev-type-of-work-create"
            }
          },
          "TypeDashofDashworkDashgetLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/entity-payroll-setting-dev-type-of-work-get"
            }
          },
          "SpecificDashworkDashcreateLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/entity-payroll-setting-dev-specific-work-create"
            }
          },
          "SpecificDashworkDashgetLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/entity-payroll-setting-dev-specific-work-get"
            }
          },
          "SpecificDashbyDashtypeDashgetLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/entity-payroll-setting-dev-specific-by-type-get"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "entity-payroll-setting",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/entity-payroll-setting-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/entity-payroll-setting-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][1]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "entity-payroll-setting",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "PayrollDashbankDashcreateLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/entity-payroll-setting/dev/1613459038389-2021-02-16T07:03:58.389Z/entity-payroll-setting.zip"
              },
              "FunctionName": "entity-payroll-setting-dev-payroll-bank-create",
              "Handler": "api/payroll-setting/add_bank.index",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "item_table": "Entity"
                }
              }
            },
            "DependsOn": [
              "PayrollDashbankDashcreateLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "PayrollDashbankDashcreateLambdaVersionkmoRoK5Dapq0stklBFf2NF724PYhYL6F1lGdiYX7s": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PayrollDashbankDashcreateLambdaFunction"
              },
              "CodeSha256": "UeF9kY3Iy4ORJpFeo+HtlfM5uoIU0peXR8D4YHCeCGE="
            }
          },
          "PayrollDashbankDashgetLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/entity-payroll-setting/dev/1613459038389-2021-02-16T07:03:58.389Z/entity-payroll-setting.zip"
              },
              "FunctionName": "entity-payroll-setting-dev-payroll-bank-get",
              "Handler": "api/payroll-setting/get_bank.get",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "item_table": "Entity"
                }
              }
            },
            "DependsOn": [
              "PayrollDashbankDashgetLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "PayrollDashbankDashgetLambdaVersionWyE7bIBoIUpLu5RQkglP3RACP6APVhm3rMxblRphY": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PayrollDashbankDashgetLambdaFunction"
              },
              "CodeSha256": "UeF9kY3Iy4ORJpFeo+HtlfM5uoIU0peXR8D4YHCeCGE="
            }
          },
          "PayrollDashtaxDashcreateLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/entity-payroll-setting/dev/1613459038389-2021-02-16T07:03:58.389Z/entity-payroll-setting.zip"
              },
              "FunctionName": "entity-payroll-setting-dev-payroll-tax-create",
              "Handler": "api/payroll-setting/add_tax.index",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "item_table": "Entity"
                }
              }
            },
            "DependsOn": [
              "PayrollDashtaxDashcreateLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "PayrollDashtaxDashcreateLambdaVersionvMkBqjHBKhvcWRwI84pfQ3hwHS9Id77VzUpmGN2QGU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PayrollDashtaxDashcreateLambdaFunction"
              },
              "CodeSha256": "UeF9kY3Iy4ORJpFeo+HtlfM5uoIU0peXR8D4YHCeCGE="
            }
          },
          "PayrollDashtaxDashgetLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/entity-payroll-setting/dev/1613459038389-2021-02-16T07:03:58.389Z/entity-payroll-setting.zip"
              },
              "FunctionName": "entity-payroll-setting-dev-payroll-tax-get",
              "Handler": "api/payroll-setting/get_tax.get",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "item_table": "Entity"
                }
              }
            },
            "DependsOn": [
              "PayrollDashtaxDashgetLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "PayrollDashtaxDashgetLambdaVersionOHKsCnqnrmpO6jnJEARH5gN3OWnNaqMiq1XDF8U": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PayrollDashtaxDashgetLambdaFunction"
              },
              "CodeSha256": "UeF9kY3Iy4ORJpFeo+HtlfM5uoIU0peXR8D4YHCeCGE="
            }
          },
          "PayrollDashbranchDashcreateLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/entity-payroll-setting/dev/1613459038389-2021-02-16T07:03:58.389Z/entity-payroll-setting.zip"
              },
              "FunctionName": "entity-payroll-setting-dev-payroll-branch-create",
              "Handler": "api/payroll-setting/add_department.index",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "item_table": "Entity"
                }
              }
            },
            "DependsOn": [
              "PayrollDashbranchDashcreateLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "PayrollDashbranchDashcreateLambdaVersionQQAbq1Wawsd44CkuyxL7RakQsvNfxXfTIh2bjjJam8E": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PayrollDashbranchDashcreateLambdaFunction"
              },
              "CodeSha256": "UeF9kY3Iy4ORJpFeo+HtlfM5uoIU0peXR8D4YHCeCGE="
            }
          },
          "PayrollDashbranchDashgetLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/entity-payroll-setting/dev/1613459038389-2021-02-16T07:03:58.389Z/entity-payroll-setting.zip"
              },
              "FunctionName": "entity-payroll-setting-dev-payroll-branch-get",
              "Handler": "api/payroll-setting/get_department.get",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "item_table": "Entity"
                }
              }
            },
            "DependsOn": [
              "PayrollDashbranchDashgetLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "PayrollDashbranchDashgetLambdaVersionA1qPGuuIEgnMSia7uZigb08079uGwX0Me3JtGmvk": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PayrollDashbranchDashgetLambdaFunction"
              },
              "CodeSha256": "UeF9kY3Iy4ORJpFeo+HtlfM5uoIU0peXR8D4YHCeCGE="
            }
          },
          "PayrollDashpositionDashcreateLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/entity-payroll-setting/dev/1613459038389-2021-02-16T07:03:58.389Z/entity-payroll-setting.zip"
              },
              "FunctionName": "entity-payroll-setting-dev-payroll-position-create",
              "Handler": "api/payroll-setting/add_position.index",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "item_table": "Entity"
                }
              }
            },
            "DependsOn": [
              "PayrollDashpositionDashcreateLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "PayrollDashpositionDashcreateLambdaVersionY6omo4aGCGBeByMPCFirTXtMXDzbpKgKJ1PM9pJp98": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PayrollDashpositionDashcreateLambdaFunction"
              },
              "CodeSha256": "UeF9kY3Iy4ORJpFeo+HtlfM5uoIU0peXR8D4YHCeCGE="
            }
          },
          "PayrollDashpositionDashgetLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/entity-payroll-setting/dev/1613459038389-2021-02-16T07:03:58.389Z/entity-payroll-setting.zip"
              },
              "FunctionName": "entity-payroll-setting-dev-payroll-position-get",
              "Handler": "api/payroll-setting/get_position.get",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "item_table": "Entity"
                }
              }
            },
            "DependsOn": [
              "PayrollDashpositionDashgetLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "PayrollDashpositionDashgetLambdaVersionNJAfXjXqxIk6UHg3RJ0P5YN32Zxy99b9iJDKqYlzTC8": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PayrollDashpositionDashgetLambdaFunction"
              },
              "CodeSha256": "UeF9kY3Iy4ORJpFeo+HtlfM5uoIU0peXR8D4YHCeCGE="
            }
          },
          "PayrollDashconponentDashcreateLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/entity-payroll-setting/dev/1613459038389-2021-02-16T07:03:58.389Z/entity-payroll-setting.zip"
              },
              "FunctionName": "entity-payroll-setting-dev-payroll-conponent-create",
              "Handler": "api/payroll-setting/add_pay_component.index",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "item_table": "Entity"
                }
              }
            },
            "DependsOn": [
              "PayrollDashconponentDashcreateLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "PayrollDashconponentDashcreateLambdaVersionhubpaOVqHl6Xq2RmjdG4gR2czYgeMzYu045yx2aWQ": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PayrollDashconponentDashcreateLambdaFunction"
              },
              "CodeSha256": "UeF9kY3Iy4ORJpFeo+HtlfM5uoIU0peXR8D4YHCeCGE="
            }
          },
          "PayrollDashconponentDashgetLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/entity-payroll-setting/dev/1613459038389-2021-02-16T07:03:58.389Z/entity-payroll-setting.zip"
              },
              "FunctionName": "entity-payroll-setting-dev-payroll-conponent-get",
              "Handler": "api/payroll-setting/get_pay_component.get",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "item_table": "Entity"
                }
              }
            },
            "DependsOn": [
              "PayrollDashconponentDashgetLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "PayrollDashconponentDashgetLambdaVersionSC4hNnvVV7U0eitBnjKqScfSCwlvR2WzHgnzadv8U": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PayrollDashconponentDashgetLambdaFunction"
              },
              "CodeSha256": "UeF9kY3Iy4ORJpFeo+HtlfM5uoIU0peXR8D4YHCeCGE="
            }
          },
          "PayrollDashperiodDashcreateLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/entity-payroll-setting/dev/1613459038389-2021-02-16T07:03:58.389Z/entity-payroll-setting.zip"
              },
              "FunctionName": "entity-payroll-setting-dev-payroll-period-create",
              "Handler": "api/payroll-setting/add_period.index",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "item_table": "Entity"
                }
              }
            },
            "DependsOn": [
              "PayrollDashperiodDashcreateLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "PayrollDashperiodDashcreateLambdaVersionaYJ5uPRIg2KYIz2GwhsUV7Vx4QL33Irgq2mCG2zrE": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PayrollDashperiodDashcreateLambdaFunction"
              },
              "CodeSha256": "UeF9kY3Iy4ORJpFeo+HtlfM5uoIU0peXR8D4YHCeCGE="
            }
          },
          "PayrollDashperiodDashgetLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/entity-payroll-setting/dev/1613459038389-2021-02-16T07:03:58.389Z/entity-payroll-setting.zip"
              },
              "FunctionName": "entity-payroll-setting-dev-payroll-period-get",
              "Handler": "api/payroll-setting/get_period.get",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "item_table": "Entity"
                }
              }
            },
            "DependsOn": [
              "PayrollDashperiodDashgetLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "PayrollDashperiodDashgetLambdaVersionhIwM6wUQ1LEgBk9jG2cvrEVNXmFIVXFIuT0vk2RU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PayrollDashperiodDashgetLambdaFunction"
              },
              "CodeSha256": "UeF9kY3Iy4ORJpFeo+HtlfM5uoIU0peXR8D4YHCeCGE="
            }
          },
          "PayrollDashnssfDashcreateLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/entity-payroll-setting/dev/1613459038389-2021-02-16T07:03:58.389Z/entity-payroll-setting.zip"
              },
              "FunctionName": "entity-payroll-setting-dev-payroll-nssf-create",
              "Handler": "api/payroll-setting/add_nssf.index",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "item_table": "Entity"
                }
              }
            },
            "DependsOn": [
              "PayrollDashnssfDashcreateLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "PayrollDashnssfDashcreateLambdaVersionrPAbn6bT8ZgtoXSfZLt8cY157vvj1HrwiLirMw67hU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PayrollDashnssfDashcreateLambdaFunction"
              },
              "CodeSha256": "UeF9kY3Iy4ORJpFeo+HtlfM5uoIU0peXR8D4YHCeCGE="
            }
          },
          "PayrollDashnssfDashgetLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/entity-payroll-setting/dev/1613459038389-2021-02-16T07:03:58.389Z/entity-payroll-setting.zip"
              },
              "FunctionName": "entity-payroll-setting-dev-payroll-nssf-get",
              "Handler": "api/payroll-setting/get_nssf.get",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "item_table": "Entity"
                }
              }
            },
            "DependsOn": [
              "PayrollDashnssfDashgetLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "PayrollDashnssfDashgetLambdaVersionlLmcHNJONDaqPxaxrUtqEUCmpe2wOGICnTj8iMYQcig": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PayrollDashnssfDashgetLambdaFunction"
              },
              "CodeSha256": "UeF9kY3Iy4ORJpFeo+HtlfM5uoIU0peXR8D4YHCeCGE="
            }
          },
          "TypeDashofDashworkDashcreateLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/entity-payroll-setting/dev/1613459038389-2021-02-16T07:03:58.389Z/entity-payroll-setting.zip"
              },
              "FunctionName": "entity-payroll-setting-dev-type-of-work-create",
              "Handler": "api/payroll-setting/add_type_of_work.index",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "item_table": "Entity"
                }
              }
            },
            "DependsOn": [
              "TypeDashofDashworkDashcreateLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "TypeDashofDashworkDashcreateLambdaVersionYTfifgWCG8BqFhtDBDBHa2vIe7mNXnCEsIcDjjreCk": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "TypeDashofDashworkDashcreateLambdaFunction"
              },
              "CodeSha256": "UeF9kY3Iy4ORJpFeo+HtlfM5uoIU0peXR8D4YHCeCGE="
            }
          },
          "TypeDashofDashworkDashgetLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/entity-payroll-setting/dev/1613459038389-2021-02-16T07:03:58.389Z/entity-payroll-setting.zip"
              },
              "FunctionName": "entity-payroll-setting-dev-type-of-work-get",
              "Handler": "api/payroll-setting/get_type_of_work.get",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "item_table": "Entity"
                }
              }
            },
            "DependsOn": [
              "TypeDashofDashworkDashgetLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "TypeDashofDashworkDashgetLambdaVersion2v5IHWCIxmX0dAj3mzrD7TP0k1RC9Krbz40Vu5g": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "TypeDashofDashworkDashgetLambdaFunction"
              },
              "CodeSha256": "UeF9kY3Iy4ORJpFeo+HtlfM5uoIU0peXR8D4YHCeCGE="
            }
          },
          "SpecificDashworkDashcreateLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/entity-payroll-setting/dev/1613459038389-2021-02-16T07:03:58.389Z/entity-payroll-setting.zip"
              },
              "FunctionName": "entity-payroll-setting-dev-specific-work-create",
              "Handler": "api/payroll-setting/add_specific_work.index",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "item_table": "Entity"
                }
              }
            },
            "DependsOn": [
              "SpecificDashworkDashcreateLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "SpecificDashworkDashcreateLambdaVersion9q0sbOYUiBEMvpDN58aFwIprUfu57AEFdQoAoBy0": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SpecificDashworkDashcreateLambdaFunction"
              },
              "CodeSha256": "UeF9kY3Iy4ORJpFeo+HtlfM5uoIU0peXR8D4YHCeCGE="
            }
          },
          "SpecificDashworkDashgetLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/entity-payroll-setting/dev/1613459038389-2021-02-16T07:03:58.389Z/entity-payroll-setting.zip"
              },
              "FunctionName": "entity-payroll-setting-dev-specific-work-get",
              "Handler": "api/payroll-setting/get_specific_work.get",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "item_table": "Entity"
                }
              }
            },
            "DependsOn": [
              "SpecificDashworkDashgetLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "SpecificDashworkDashgetLambdaVersionLlOky1zLG1VlR4W0ScLiTfrTEZhpgU4DCFfOA9MP90": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SpecificDashworkDashgetLambdaFunction"
              },
              "CodeSha256": "UeF9kY3Iy4ORJpFeo+HtlfM5uoIU0peXR8D4YHCeCGE="
            }
          },
          "SpecificDashbyDashtypeDashgetLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/entity-payroll-setting/dev/1613459038389-2021-02-16T07:03:58.389Z/entity-payroll-setting.zip"
              },
              "FunctionName": "entity-payroll-setting-dev-specific-by-type-get",
              "Handler": "api/payroll-setting/get_specific_by_type.get",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "item_table": "Entity"
                }
              }
            },
            "DependsOn": [
              "SpecificDashbyDashtypeDashgetLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "SpecificDashbyDashtypeDashgetLambdaVersionqKV8y3s9V9VTXrXSM44k0ReSIaAMZVuwteONpuP2A": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SpecificDashbyDashtypeDashgetLambdaFunction"
              },
              "CodeSha256": "UeF9kY3Iy4ORJpFeo+HtlfM5uoIU0peXR8D4YHCeCGE="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-entity-payroll-setting",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceV1": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "v1",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1EntityDashpayrollDashsetting": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1"
              },
              "PathPart": "entity-payroll-setting",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1EntityDashpayrollDashsettingBank": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsetting"
              },
              "PathPart": "bank",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1EntityDashpayrollDashsettingBankInstitute": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingBank"
              },
              "PathPart": "institute",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1EntityDashpayrollDashsettingBankInstituteInstituteidVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingBankInstitute"
              },
              "PathPart": "{institute_id}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1EntityDashpayrollDashsettingBankInstituteInstituteidVarAdd": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingBankInstituteInstituteidVar"
              },
              "PathPart": "add",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1EntityDashpayrollDashsettingBankInstituteInstituteidVarList": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingBankInstituteInstituteidVar"
              },
              "PathPart": "list",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1EntityDashpayrollDashsettingTax": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsetting"
              },
              "PathPart": "tax",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1EntityDashpayrollDashsettingTaxInstitute": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingTax"
              },
              "PathPart": "institute",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1EntityDashpayrollDashsettingTaxInstituteInstituteidVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingTaxInstitute"
              },
              "PathPart": "{institute_id}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1EntityDashpayrollDashsettingTaxInstituteInstituteidVarAdd": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingTaxInstituteInstituteidVar"
              },
              "PathPart": "add",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1EntityDashpayrollDashsettingTaxInstituteInstituteidVarList": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingTaxInstituteInstituteidVar"
              },
              "PathPart": "list",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1EntityDashpayrollDashsettingDepartment": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsetting"
              },
              "PathPart": "department",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1EntityDashpayrollDashsettingDepartmentInstitute": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingDepartment"
              },
              "PathPart": "institute",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1EntityDashpayrollDashsettingDepartmentInstituteInstituteidVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingDepartmentInstitute"
              },
              "PathPart": "{institute_id}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1EntityDashpayrollDashsettingDepartmentInstituteInstituteidVarAdd": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingDepartmentInstituteInstituteidVar"
              },
              "PathPart": "add",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1EntityDashpayrollDashsettingDepartmentInstituteInstituteidVarList": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingDepartmentInstituteInstituteidVar"
              },
              "PathPart": "list",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1EntityDashpayrollDashsettingPosition": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsetting"
              },
              "PathPart": "position",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1EntityDashpayrollDashsettingPositionInstitute": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingPosition"
              },
              "PathPart": "institute",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1EntityDashpayrollDashsettingPositionInstituteInstituteidVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingPositionInstitute"
              },
              "PathPart": "{institute_id}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1EntityDashpayrollDashsettingPositionInstituteInstituteidVarAdd": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingPositionInstituteInstituteidVar"
              },
              "PathPart": "add",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1EntityDashpayrollDashsettingPositionInstituteInstituteidVarList": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingPositionInstituteInstituteidVar"
              },
              "PathPart": "list",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1EntityDashpayrollDashsettingPayDashcomponent": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsetting"
              },
              "PathPart": "pay-component",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1EntityDashpayrollDashsettingPayDashcomponentInstitute": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingPayDashcomponent"
              },
              "PathPart": "institute",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1EntityDashpayrollDashsettingPayDashcomponentInstituteInstituteidVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingPayDashcomponentInstitute"
              },
              "PathPart": "{institute_id}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1EntityDashpayrollDashsettingPayDashcomponentInstituteInstituteidVarAdd": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingPayDashcomponentInstituteInstituteidVar"
              },
              "PathPart": "add",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1EntityDashpayrollDashsettingPayDashcomponentInstituteInstituteidVarList": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingPayDashcomponentInstituteInstituteidVar"
              },
              "PathPart": "list",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1EntityDashpayrollDashsettingPeriod": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsetting"
              },
              "PathPart": "period",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1EntityDashpayrollDashsettingPeriodInstitute": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingPeriod"
              },
              "PathPart": "institute",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1EntityDashpayrollDashsettingPeriodInstituteInstituteidVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingPeriodInstitute"
              },
              "PathPart": "{institute_id}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1EntityDashpayrollDashsettingPeriodInstituteInstituteidVarAdd": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingPeriodInstituteInstituteidVar"
              },
              "PathPart": "add",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1EntityDashpayrollDashsettingPeriodInstituteInstituteidVarList": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingPeriodInstituteInstituteidVar"
              },
              "PathPart": "list",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1EntityDashpayrollDashsettingNssf": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsetting"
              },
              "PathPart": "nssf",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1EntityDashpayrollDashsettingNssfInstitute": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingNssf"
              },
              "PathPart": "institute",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1EntityDashpayrollDashsettingNssfInstituteInstituteidVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingNssfInstitute"
              },
              "PathPart": "{institute_id}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1EntityDashpayrollDashsettingNssfInstituteInstituteidVarAdd": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingNssfInstituteInstituteidVar"
              },
              "PathPart": "add",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1EntityDashpayrollDashsettingNssfInstituteInstituteidVarList": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingNssfInstituteInstituteidVar"
              },
              "PathPart": "list",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1EntityDashpayrollDashsettingTypeDashofDashwork": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsetting"
              },
              "PathPart": "type-of-work",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1EntityDashpayrollDashsettingTypeDashofDashworkInstitute": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingTypeDashofDashwork"
              },
              "PathPart": "institute",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1EntityDashpayrollDashsettingTypeDashofDashworkInstituteInstituteidVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingTypeDashofDashworkInstitute"
              },
              "PathPart": "{institute_id}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1EntityDashpayrollDashsettingTypeDashofDashworkInstituteInstituteidVarAdd": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingTypeDashofDashworkInstituteInstituteidVar"
              },
              "PathPart": "add",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1EntityDashpayrollDashsettingTypeDashofDashworkInstituteInstituteidVarList": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingTypeDashofDashworkInstituteInstituteidVar"
              },
              "PathPart": "list",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1EntityDashpayrollDashsettingSpecificDashwork": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsetting"
              },
              "PathPart": "specific-work",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1EntityDashpayrollDashsettingSpecificDashworkInstitute": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingSpecificDashwork"
              },
              "PathPart": "institute",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1EntityDashpayrollDashsettingSpecificDashworkInstituteInstituteidVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingSpecificDashworkInstitute"
              },
              "PathPart": "{institute_id}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1EntityDashpayrollDashsettingSpecificDashworkInstituteInstituteidVarAdd": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingSpecificDashworkInstituteInstituteidVar"
              },
              "PathPart": "add",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1EntityDashpayrollDashsettingSpecificDashworkInstituteInstituteidVarList": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingSpecificDashworkInstituteInstituteidVar"
              },
              "PathPart": "list",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1EntityDashpayrollDashsettingSpecificDashbyDashtype": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsetting"
              },
              "PathPart": "specific-by-type",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1EntityDashpayrollDashsettingSpecificDashbyDashtypeInstitute": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingSpecificDashbyDashtype"
              },
              "PathPart": "institute",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1EntityDashpayrollDashsettingSpecificDashbyDashtypeInstituteInstituteidVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingSpecificDashbyDashtypeInstitute"
              },
              "PathPart": "{institute_id}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1EntityDashpayrollDashsettingSpecificDashbyDashtypeInstituteInstituteidVarList": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingSpecificDashbyDashtypeInstituteInstituteidVar"
              },
              "PathPart": "list",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1EntityDashpayrollDashsettingSpecificDashbyDashtypeInstituteInstituteidVarListIdVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingSpecificDashbyDashtypeInstituteInstituteidVarList"
              },
              "PathPart": "{id}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodV1EntityDashpayrollDashsettingBankInstituteInstituteidVarAddOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".*\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingBankInstituteInstituteidVarAdd"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodV1EntityDashpayrollDashsettingBankInstituteInstituteidVarListOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".*\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingBankInstituteInstituteidVarList"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodV1EntityDashpayrollDashsettingTaxInstituteInstituteidVarAddOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".*\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingTaxInstituteInstituteidVarAdd"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodV1EntityDashpayrollDashsettingTaxInstituteInstituteidVarListOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".*\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingTaxInstituteInstituteidVarList"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodV1EntityDashpayrollDashsettingDepartmentInstituteInstituteidVarAddOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".*\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingDepartmentInstituteInstituteidVarAdd"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodV1EntityDashpayrollDashsettingDepartmentInstituteInstituteidVarListOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".*\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingDepartmentInstituteInstituteidVarList"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodV1EntityDashpayrollDashsettingPositionInstituteInstituteidVarAddOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".*\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingPositionInstituteInstituteidVarAdd"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodV1EntityDashpayrollDashsettingPositionInstituteInstituteidVarListOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".*\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingPositionInstituteInstituteidVarList"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodV1EntityDashpayrollDashsettingPayDashcomponentInstituteInstituteidVarAddOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".*\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingPayDashcomponentInstituteInstituteidVarAdd"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodV1EntityDashpayrollDashsettingPayDashcomponentInstituteInstituteidVarListOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".*\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingPayDashcomponentInstituteInstituteidVarList"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodV1EntityDashpayrollDashsettingPeriodInstituteInstituteidVarAddOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".*\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingPeriodInstituteInstituteidVarAdd"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodV1EntityDashpayrollDashsettingPeriodInstituteInstituteidVarListOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".*\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingPeriodInstituteInstituteidVarList"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodV1EntityDashpayrollDashsettingNssfInstituteInstituteidVarAddOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".*\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingNssfInstituteInstituteidVarAdd"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodV1EntityDashpayrollDashsettingNssfInstituteInstituteidVarListOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".*\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingNssfInstituteInstituteidVarList"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodV1EntityDashpayrollDashsettingTypeDashofDashworkInstituteInstituteidVarAddOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".*\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingTypeDashofDashworkInstituteInstituteidVarAdd"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodV1EntityDashpayrollDashsettingTypeDashofDashworkInstituteInstituteidVarListOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".*\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingTypeDashofDashworkInstituteInstituteidVarList"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodV1EntityDashpayrollDashsettingSpecificDashworkInstituteInstituteidVarAddOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".*\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingSpecificDashworkInstituteInstituteidVarAdd"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodV1EntityDashpayrollDashsettingSpecificDashworkInstituteInstituteidVarListOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".*\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingSpecificDashworkInstituteInstituteidVarList"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodV1EntityDashpayrollDashsettingSpecificDashbyDashtypeInstituteInstituteidVarListIdVarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".*\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingSpecificDashbyDashtypeInstituteInstituteidVarListIdVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodV1EntityDashpayrollDashsettingBankInstituteInstituteidVarAddPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {
                "method.request.path.id": true
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingBankInstituteInstituteidVarAdd"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "PayrollDashbankDashcreateLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodV1EntityDashpayrollDashsettingBankInstituteInstituteidVarListGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {
                "method.request.path.id": true
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingBankInstituteInstituteidVarList"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "PayrollDashbankDashgetLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodV1EntityDashpayrollDashsettingTaxInstituteInstituteidVarAddPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {
                "method.request.path.id": true
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingTaxInstituteInstituteidVarAdd"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "PayrollDashtaxDashcreateLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodV1EntityDashpayrollDashsettingTaxInstituteInstituteidVarListGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {
                "method.request.path.id": true
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingTaxInstituteInstituteidVarList"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "PayrollDashtaxDashgetLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodV1EntityDashpayrollDashsettingDepartmentInstituteInstituteidVarAddPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {
                "method.request.path.id": true
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingDepartmentInstituteInstituteidVarAdd"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "PayrollDashbranchDashcreateLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodV1EntityDashpayrollDashsettingDepartmentInstituteInstituteidVarListGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {
                "method.request.path.id": true
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingDepartmentInstituteInstituteidVarList"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "PayrollDashbranchDashgetLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodV1EntityDashpayrollDashsettingPositionInstituteInstituteidVarAddPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {
                "method.request.path.id": true
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingPositionInstituteInstituteidVarAdd"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "PayrollDashpositionDashcreateLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodV1EntityDashpayrollDashsettingPositionInstituteInstituteidVarListGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {
                "method.request.path.id": true
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingPositionInstituteInstituteidVarList"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "PayrollDashpositionDashgetLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodV1EntityDashpayrollDashsettingPayDashcomponentInstituteInstituteidVarAddPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {
                "method.request.path.id": true
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingPayDashcomponentInstituteInstituteidVarAdd"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "PayrollDashconponentDashcreateLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodV1EntityDashpayrollDashsettingPayDashcomponentInstituteInstituteidVarListGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {
                "method.request.path.id": true
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingPayDashcomponentInstituteInstituteidVarList"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "PayrollDashconponentDashgetLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodV1EntityDashpayrollDashsettingPeriodInstituteInstituteidVarAddPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {
                "method.request.path.id": true
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingPeriodInstituteInstituteidVarAdd"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "PayrollDashperiodDashcreateLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodV1EntityDashpayrollDashsettingPeriodInstituteInstituteidVarListGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {
                "method.request.path.id": true
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingPeriodInstituteInstituteidVarList"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "PayrollDashperiodDashgetLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodV1EntityDashpayrollDashsettingNssfInstituteInstituteidVarAddPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {
                "method.request.path.id": true
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingNssfInstituteInstituteidVarAdd"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "PayrollDashnssfDashcreateLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodV1EntityDashpayrollDashsettingNssfInstituteInstituteidVarListGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {
                "method.request.path.id": true
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingNssfInstituteInstituteidVarList"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "PayrollDashnssfDashgetLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodV1EntityDashpayrollDashsettingTypeDashofDashworkInstituteInstituteidVarAddPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {
                "method.request.path.id": true
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingTypeDashofDashworkInstituteInstituteidVarAdd"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "TypeDashofDashworkDashcreateLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodV1EntityDashpayrollDashsettingTypeDashofDashworkInstituteInstituteidVarListGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {
                "method.request.path.id": true
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingTypeDashofDashworkInstituteInstituteidVarList"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "TypeDashofDashworkDashgetLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodV1EntityDashpayrollDashsettingSpecificDashworkInstituteInstituteidVarAddPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {
                "method.request.path.id": true
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingSpecificDashworkInstituteInstituteidVarAdd"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "SpecificDashworkDashcreateLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodV1EntityDashpayrollDashsettingSpecificDashworkInstituteInstituteidVarListGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {
                "method.request.path.id": true
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingSpecificDashworkInstituteInstituteidVarList"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "SpecificDashworkDashgetLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodV1EntityDashpayrollDashsettingSpecificDashbyDashtypeInstituteInstituteidVarListIdVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {
                "method.request.path.id": true
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1EntityDashpayrollDashsettingSpecificDashbyDashtypeInstituteInstituteidVarListIdVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "SpecificDashbyDashtypeDashgetLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayDeployment1613459020554": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodV1EntityDashpayrollDashsettingBankInstituteInstituteidVarAddOptions",
              "ApiGatewayMethodV1EntityDashpayrollDashsettingBankInstituteInstituteidVarListOptions",
              "ApiGatewayMethodV1EntityDashpayrollDashsettingTaxInstituteInstituteidVarAddOptions",
              "ApiGatewayMethodV1EntityDashpayrollDashsettingTaxInstituteInstituteidVarListOptions",
              "ApiGatewayMethodV1EntityDashpayrollDashsettingDepartmentInstituteInstituteidVarAddOptions",
              "ApiGatewayMethodV1EntityDashpayrollDashsettingDepartmentInstituteInstituteidVarListOptions",
              "ApiGatewayMethodV1EntityDashpayrollDashsettingPositionInstituteInstituteidVarAddOptions",
              "ApiGatewayMethodV1EntityDashpayrollDashsettingPositionInstituteInstituteidVarListOptions",
              "ApiGatewayMethodV1EntityDashpayrollDashsettingPayDashcomponentInstituteInstituteidVarAddOptions",
              "ApiGatewayMethodV1EntityDashpayrollDashsettingPayDashcomponentInstituteInstituteidVarListOptions",
              "ApiGatewayMethodV1EntityDashpayrollDashsettingPeriodInstituteInstituteidVarAddOptions",
              "ApiGatewayMethodV1EntityDashpayrollDashsettingPeriodInstituteInstituteidVarListOptions",
              "ApiGatewayMethodV1EntityDashpayrollDashsettingNssfInstituteInstituteidVarAddOptions",
              "ApiGatewayMethodV1EntityDashpayrollDashsettingNssfInstituteInstituteidVarListOptions",
              "ApiGatewayMethodV1EntityDashpayrollDashsettingTypeDashofDashworkInstituteInstituteidVarAddOptions",
              "ApiGatewayMethodV1EntityDashpayrollDashsettingTypeDashofDashworkInstituteInstituteidVarListOptions",
              "ApiGatewayMethodV1EntityDashpayrollDashsettingSpecificDashworkInstituteInstituteidVarAddOptions",
              "ApiGatewayMethodV1EntityDashpayrollDashsettingSpecificDashworkInstituteInstituteidVarListOptions",
              "ApiGatewayMethodV1EntityDashpayrollDashsettingSpecificDashbyDashtypeInstituteInstituteidVarListIdVarOptions",
              "ApiGatewayMethodV1EntityDashpayrollDashsettingBankInstituteInstituteidVarAddPost",
              "ApiGatewayMethodV1EntityDashpayrollDashsettingBankInstituteInstituteidVarListGet",
              "ApiGatewayMethodV1EntityDashpayrollDashsettingTaxInstituteInstituteidVarAddPost",
              "ApiGatewayMethodV1EntityDashpayrollDashsettingTaxInstituteInstituteidVarListGet",
              "ApiGatewayMethodV1EntityDashpayrollDashsettingDepartmentInstituteInstituteidVarAddPost",
              "ApiGatewayMethodV1EntityDashpayrollDashsettingDepartmentInstituteInstituteidVarListGet",
              "ApiGatewayMethodV1EntityDashpayrollDashsettingPositionInstituteInstituteidVarAddPost",
              "ApiGatewayMethodV1EntityDashpayrollDashsettingPositionInstituteInstituteidVarListGet",
              "ApiGatewayMethodV1EntityDashpayrollDashsettingPayDashcomponentInstituteInstituteidVarAddPost",
              "ApiGatewayMethodV1EntityDashpayrollDashsettingPayDashcomponentInstituteInstituteidVarListGet",
              "ApiGatewayMethodV1EntityDashpayrollDashsettingPeriodInstituteInstituteidVarAddPost",
              "ApiGatewayMethodV1EntityDashpayrollDashsettingPeriodInstituteInstituteidVarListGet",
              "ApiGatewayMethodV1EntityDashpayrollDashsettingNssfInstituteInstituteidVarAddPost",
              "ApiGatewayMethodV1EntityDashpayrollDashsettingNssfInstituteInstituteidVarListGet",
              "ApiGatewayMethodV1EntityDashpayrollDashsettingTypeDashofDashworkInstituteInstituteidVarAddPost",
              "ApiGatewayMethodV1EntityDashpayrollDashsettingTypeDashofDashworkInstituteInstituteidVarListGet",
              "ApiGatewayMethodV1EntityDashpayrollDashsettingSpecificDashworkInstituteInstituteidVarAddPost",
              "ApiGatewayMethodV1EntityDashpayrollDashsettingSpecificDashworkInstituteInstituteidVarListGet",
              "ApiGatewayMethodV1EntityDashpayrollDashsettingSpecificDashbyDashtypeInstituteInstituteidVarListIdVarGet"
            ]
          },
          "PayrollDashbankDashcreateLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PayrollDashbankDashcreateLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "PayrollDashbankDashgetLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PayrollDashbankDashgetLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "PayrollDashtaxDashcreateLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PayrollDashtaxDashcreateLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "PayrollDashtaxDashgetLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PayrollDashtaxDashgetLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "PayrollDashbranchDashcreateLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PayrollDashbranchDashcreateLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "PayrollDashbranchDashgetLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PayrollDashbranchDashgetLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "PayrollDashpositionDashcreateLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PayrollDashpositionDashcreateLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "PayrollDashpositionDashgetLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PayrollDashpositionDashgetLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "PayrollDashconponentDashcreateLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PayrollDashconponentDashcreateLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "PayrollDashconponentDashgetLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PayrollDashconponentDashgetLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "PayrollDashperiodDashcreateLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PayrollDashperiodDashcreateLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "PayrollDashperiodDashgetLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PayrollDashperiodDashgetLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "PayrollDashnssfDashcreateLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PayrollDashnssfDashcreateLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "PayrollDashnssfDashgetLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PayrollDashnssfDashgetLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "TypeDashofDashworkDashcreateLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "TypeDashofDashworkDashcreateLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "TypeDashofDashworkDashgetLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "TypeDashofDashworkDashgetLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "SpecificDashworkDashcreateLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SpecificDashworkDashcreateLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "SpecificDashworkDashgetLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SpecificDashworkDashgetLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "SpecificDashbyDashtypeDashgetLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SpecificDashbyDashtypeDashgetLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "PayrollDashbankDashcreateLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PayrollDashbankDashcreateLambdaVersionkmoRoK5Dapq0stklBFf2NF724PYhYL6F1lGdiYX7s"
            }
          },
          "PayrollDashbankDashgetLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PayrollDashbankDashgetLambdaVersionWyE7bIBoIUpLu5RQkglP3RACP6APVhm3rMxblRphY"
            }
          },
          "PayrollDashtaxDashcreateLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PayrollDashtaxDashcreateLambdaVersionvMkBqjHBKhvcWRwI84pfQ3hwHS9Id77VzUpmGN2QGU"
            }
          },
          "PayrollDashtaxDashgetLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PayrollDashtaxDashgetLambdaVersionOHKsCnqnrmpO6jnJEARH5gN3OWnNaqMiq1XDF8U"
            }
          },
          "PayrollDashbranchDashcreateLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PayrollDashbranchDashcreateLambdaVersionQQAbq1Wawsd44CkuyxL7RakQsvNfxXfTIh2bjjJam8E"
            }
          },
          "PayrollDashbranchDashgetLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PayrollDashbranchDashgetLambdaVersionA1qPGuuIEgnMSia7uZigb08079uGwX0Me3JtGmvk"
            }
          },
          "PayrollDashpositionDashcreateLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PayrollDashpositionDashcreateLambdaVersionY6omo4aGCGBeByMPCFirTXtMXDzbpKgKJ1PM9pJp98"
            }
          },
          "PayrollDashpositionDashgetLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PayrollDashpositionDashgetLambdaVersionNJAfXjXqxIk6UHg3RJ0P5YN32Zxy99b9iJDKqYlzTC8"
            }
          },
          "PayrollDashconponentDashcreateLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PayrollDashconponentDashcreateLambdaVersionhubpaOVqHl6Xq2RmjdG4gR2czYgeMzYu045yx2aWQ"
            }
          },
          "PayrollDashconponentDashgetLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PayrollDashconponentDashgetLambdaVersionSC4hNnvVV7U0eitBnjKqScfSCwlvR2WzHgnzadv8U"
            }
          },
          "PayrollDashperiodDashcreateLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PayrollDashperiodDashcreateLambdaVersionaYJ5uPRIg2KYIz2GwhsUV7Vx4QL33Irgq2mCG2zrE"
            }
          },
          "PayrollDashperiodDashgetLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PayrollDashperiodDashgetLambdaVersionhIwM6wUQ1LEgBk9jG2cvrEVNXmFIVXFIuT0vk2RU"
            }
          },
          "PayrollDashnssfDashcreateLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PayrollDashnssfDashcreateLambdaVersionrPAbn6bT8ZgtoXSfZLt8cY157vvj1HrwiLirMw67hU"
            }
          },
          "PayrollDashnssfDashgetLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PayrollDashnssfDashgetLambdaVersionlLmcHNJONDaqPxaxrUtqEUCmpe2wOGICnTj8iMYQcig"
            }
          },
          "TypeDashofDashworkDashcreateLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "TypeDashofDashworkDashcreateLambdaVersionYTfifgWCG8BqFhtDBDBHa2vIe7mNXnCEsIcDjjreCk"
            }
          },
          "TypeDashofDashworkDashgetLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "TypeDashofDashworkDashgetLambdaVersion2v5IHWCIxmX0dAj3mzrD7TP0k1RC9Krbz40Vu5g"
            }
          },
          "SpecificDashworkDashcreateLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SpecificDashworkDashcreateLambdaVersion9q0sbOYUiBEMvpDN58aFwIprUfu57AEFdQoAoBy0"
            }
          },
          "SpecificDashworkDashgetLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SpecificDashworkDashgetLambdaVersionLlOky1zLG1VlR4W0ScLiTfrTEZhpgU4DCFfOA9MP90"
            }
          },
          "SpecificDashbyDashtypeDashgetLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SpecificDashbyDashtypeDashgetLambdaVersionqKV8y3s9V9VTXrXSM44k0ReSIaAMZVuwteONpuP2A"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "stage": "dev",
      "domains": {
        "prod": "apis.banhji.com",
        "staging": "staging-apis.banhji.com",
        "dev": "dev-apis.banhji.com"
      },
      "customDomain": {
        "basePath": "entity-payroll-setting",
        "domainName": "dev-apis.banhji.com",
        "stage": "dev",
        "createRout53Record": true
      }
    },
    "plugins": [
      "serverless-domain-manager"
    ],
    "pluginsData": {},
    "functions": {
      "payroll-bank-create": {
        "handler": "api/payroll-setting/add_bank.index",
        "events": [
          {
            "http": {
              "path": "v1/entity-payroll-setting/bank/institute/{institute_id}/add",
              "method": "post",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "request": {
                "parameters": {
                  "method.request.path.id": true
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "entity-payroll-setting-dev-payroll-bank-create",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "PayrollDashbankDashcreateLambdaVersionkmoRoK5Dapq0stklBFf2NF724PYhYL6F1lGdiYX7s"
      },
      "payroll-bank-get": {
        "handler": "api/payroll-setting/get_bank.get",
        "events": [
          {
            "http": {
              "path": "v1/entity-payroll-setting/bank/institute/{institute_id}/list",
              "method": "get",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "request": {
                "parameters": {
                  "method.request.path.id": true
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "entity-payroll-setting-dev-payroll-bank-get",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "PayrollDashbankDashgetLambdaVersionWyE7bIBoIUpLu5RQkglP3RACP6APVhm3rMxblRphY"
      },
      "payroll-tax-create": {
        "handler": "api/payroll-setting/add_tax.index",
        "events": [
          {
            "http": {
              "path": "v1/entity-payroll-setting/tax/institute/{institute_id}/add",
              "method": "post",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "request": {
                "parameters": {
                  "method.request.path.id": true
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "entity-payroll-setting-dev-payroll-tax-create",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "PayrollDashtaxDashcreateLambdaVersionvMkBqjHBKhvcWRwI84pfQ3hwHS9Id77VzUpmGN2QGU"
      },
      "payroll-tax-get": {
        "handler": "api/payroll-setting/get_tax.get",
        "events": [
          {
            "http": {
              "path": "v1/entity-payroll-setting/tax/institute/{institute_id}/list",
              "method": "get",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "request": {
                "parameters": {
                  "method.request.path.id": true
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "entity-payroll-setting-dev-payroll-tax-get",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "PayrollDashtaxDashgetLambdaVersionOHKsCnqnrmpO6jnJEARH5gN3OWnNaqMiq1XDF8U"
      },
      "payroll-branch-create": {
        "handler": "api/payroll-setting/add_department.index",
        "events": [
          {
            "http": {
              "path": "v1/entity-payroll-setting/department/institute/{institute_id}/add",
              "method": "post",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "request": {
                "parameters": {
                  "method.request.path.id": true
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "entity-payroll-setting-dev-payroll-branch-create",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "PayrollDashbranchDashcreateLambdaVersionQQAbq1Wawsd44CkuyxL7RakQsvNfxXfTIh2bjjJam8E"
      },
      "payroll-branch-get": {
        "handler": "api/payroll-setting/get_department.get",
        "events": [
          {
            "http": {
              "path": "v1/entity-payroll-setting/department/institute/{institute_id}/list",
              "method": "get",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "request": {
                "parameters": {
                  "method.request.path.id": true
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "entity-payroll-setting-dev-payroll-branch-get",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "PayrollDashbranchDashgetLambdaVersionA1qPGuuIEgnMSia7uZigb08079uGwX0Me3JtGmvk"
      },
      "payroll-position-create": {
        "handler": "api/payroll-setting/add_position.index",
        "events": [
          {
            "http": {
              "path": "v1/entity-payroll-setting/position/institute/{institute_id}/add",
              "method": "post",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "request": {
                "parameters": {
                  "method.request.path.id": true
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "entity-payroll-setting-dev-payroll-position-create",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "PayrollDashpositionDashcreateLambdaVersionY6omo4aGCGBeByMPCFirTXtMXDzbpKgKJ1PM9pJp98"
      },
      "payroll-position-get": {
        "handler": "api/payroll-setting/get_position.get",
        "events": [
          {
            "http": {
              "path": "v1/entity-payroll-setting/position/institute/{institute_id}/list",
              "method": "get",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "request": {
                "parameters": {
                  "method.request.path.id": true
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "entity-payroll-setting-dev-payroll-position-get",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "PayrollDashpositionDashgetLambdaVersionNJAfXjXqxIk6UHg3RJ0P5YN32Zxy99b9iJDKqYlzTC8"
      },
      "payroll-conponent-create": {
        "handler": "api/payroll-setting/add_pay_component.index",
        "events": [
          {
            "http": {
              "path": "v1/entity-payroll-setting/pay-component/institute/{institute_id}/add",
              "method": "post",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "request": {
                "parameters": {
                  "method.request.path.id": true
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "entity-payroll-setting-dev-payroll-conponent-create",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "PayrollDashconponentDashcreateLambdaVersionhubpaOVqHl6Xq2RmjdG4gR2czYgeMzYu045yx2aWQ"
      },
      "payroll-conponent-get": {
        "handler": "api/payroll-setting/get_pay_component.get",
        "events": [
          {
            "http": {
              "path": "v1/entity-payroll-setting/pay-component/institute/{institute_id}/list",
              "method": "get",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "request": {
                "parameters": {
                  "method.request.path.id": true
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "entity-payroll-setting-dev-payroll-conponent-get",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "PayrollDashconponentDashgetLambdaVersionSC4hNnvVV7U0eitBnjKqScfSCwlvR2WzHgnzadv8U"
      },
      "payroll-period-create": {
        "handler": "api/payroll-setting/add_period.index",
        "events": [
          {
            "http": {
              "path": "v1/entity-payroll-setting/period/institute/{institute_id}/add",
              "method": "post",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "request": {
                "parameters": {
                  "method.request.path.id": true
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "entity-payroll-setting-dev-payroll-period-create",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "PayrollDashperiodDashcreateLambdaVersionaYJ5uPRIg2KYIz2GwhsUV7Vx4QL33Irgq2mCG2zrE"
      },
      "payroll-period-get": {
        "handler": "api/payroll-setting/get_period.get",
        "events": [
          {
            "http": {
              "path": "v1/entity-payroll-setting/period/institute/{institute_id}/list",
              "method": "get",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "request": {
                "parameters": {
                  "method.request.path.id": true
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "entity-payroll-setting-dev-payroll-period-get",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "PayrollDashperiodDashgetLambdaVersionhIwM6wUQ1LEgBk9jG2cvrEVNXmFIVXFIuT0vk2RU"
      },
      "payroll-nssf-create": {
        "handler": "api/payroll-setting/add_nssf.index",
        "events": [
          {
            "http": {
              "path": "v1/entity-payroll-setting/nssf/institute/{institute_id}/add",
              "method": "post",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "request": {
                "parameters": {
                  "method.request.path.id": true
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "entity-payroll-setting-dev-payroll-nssf-create",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "PayrollDashnssfDashcreateLambdaVersionrPAbn6bT8ZgtoXSfZLt8cY157vvj1HrwiLirMw67hU"
      },
      "payroll-nssf-get": {
        "handler": "api/payroll-setting/get_nssf.get",
        "events": [
          {
            "http": {
              "path": "v1/entity-payroll-setting/nssf/institute/{institute_id}/list",
              "method": "get",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "request": {
                "parameters": {
                  "method.request.path.id": true
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "entity-payroll-setting-dev-payroll-nssf-get",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "PayrollDashnssfDashgetLambdaVersionlLmcHNJONDaqPxaxrUtqEUCmpe2wOGICnTj8iMYQcig"
      },
      "type-of-work-create": {
        "handler": "api/payroll-setting/add_type_of_work.index",
        "events": [
          {
            "http": {
              "path": "v1/entity-payroll-setting/type-of-work/institute/{institute_id}/add",
              "method": "post",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "request": {
                "parameters": {
                  "method.request.path.id": true
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "entity-payroll-setting-dev-type-of-work-create",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "TypeDashofDashworkDashcreateLambdaVersionYTfifgWCG8BqFhtDBDBHa2vIe7mNXnCEsIcDjjreCk"
      },
      "type-of-work-get": {
        "handler": "api/payroll-setting/get_type_of_work.get",
        "events": [
          {
            "http": {
              "path": "v1/entity-payroll-setting/type-of-work/institute/{institute_id}/list",
              "method": "get",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "request": {
                "parameters": {
                  "method.request.path.id": true
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "entity-payroll-setting-dev-type-of-work-get",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "TypeDashofDashworkDashgetLambdaVersion2v5IHWCIxmX0dAj3mzrD7TP0k1RC9Krbz40Vu5g"
      },
      "specific-work-create": {
        "handler": "api/payroll-setting/add_specific_work.index",
        "events": [
          {
            "http": {
              "path": "v1/entity-payroll-setting/specific-work/institute/{institute_id}/add",
              "method": "post",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "request": {
                "parameters": {
                  "method.request.path.id": true
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "entity-payroll-setting-dev-specific-work-create",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "SpecificDashworkDashcreateLambdaVersion9q0sbOYUiBEMvpDN58aFwIprUfu57AEFdQoAoBy0"
      },
      "specific-work-get": {
        "handler": "api/payroll-setting/get_specific_work.get",
        "events": [
          {
            "http": {
              "path": "v1/entity-payroll-setting/specific-work/institute/{institute_id}/list",
              "method": "get",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "request": {
                "parameters": {
                  "method.request.path.id": true
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "entity-payroll-setting-dev-specific-work-get",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "SpecificDashworkDashgetLambdaVersionLlOky1zLG1VlR4W0ScLiTfrTEZhpgU4DCFfOA9MP90"
      },
      "specific-by-type-get": {
        "handler": "api/payroll-setting/get_specific_by_type.get",
        "events": [
          {
            "http": {
              "path": "v1/entity-payroll-setting/specific-by-type/institute/{institute_id}/list/{id}",
              "method": "get",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "request": {
                "parameters": {
                  "method.request.path.id": true
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "entity-payroll-setting-dev-specific-by-type-get",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "SpecificDashbyDashtypeDashgetLambdaVersionqKV8y3s9V9VTXrXSM44k0ReSIaAMZVuwteONpuP2A"
      }
    },
    "serviceFilename": "serverless.yml",
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "/Users/abc/Desktop/Banhji/entity/entity-payroll-setting-master/.serverless/entity-payroll-setting.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/entity-payroll-setting/dev/1613459038389-2021-02-16T07:03:58.389Z",
    "artifact": "entity-payroll-setting.zip"
  }
}